#!/bin/sh

# Color definitions
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo "${GREEN}[*] Starting custom boot installer...${NC}"

SCRIPTS_DIR=./scripts

backup_file() {
    if [ -f "$1" ]; then
        if [ ! -f "$1.bak" ]; then
            cp "$1" "$1.bak"
            echo "${GREEN}[*] Backup created for $1${NC}"
        else
            echo "${YELLOW}[*] Backup for $1 already exists, skipping.${NC}"
        fi
    else
        echo "${YELLOW}[*] File $1 does not exist, no backup needed.${NC}"
    fi
}

# Function to check if source file is newer than destination
is_newer_content() {
    src="$1"
    dst="$2"
    
    # If destination doesn't exist, source is newer
    if [ ! -f "$dst" ]; then
        return 0
    fi
    
    # Compare file contents
    if cmp -s "$src" "$dst"; then
        # Files are identical
        return 1
    else
        # Files are different, source has newer content
        return 0
    fi
}

install_script() {
    src="$1"
    dst="$2"
    if [ -f "$src" ]; then
        # Check if it's a backup file
        if echo "$dst" | grep -q "\.bak$"; then
            echo "${YELLOW}[!] Will not install to backup file: $dst${NC}"
            return
        fi
        
        # Only install if content is different
        if is_newer_content "$src" "$dst"; then
            cp "$src" "$dst"
            chmod +x "$dst"
            echo "${GREEN}[*] Installed $src -> $dst (updated)${NC}"
        else
            echo "${YELLOW}[*] Skipping $dst - already up to date${NC}"
        fi
    else
        echo "${RED}[!] Source $src missing, skipping install for $dst${NC}"
    fi
}

# === backups only for original system files ===
echo "${YELLOW}[*] Creating backups of original system files...${NC}"
backup_file /mnt/vendor/ctrl/dmenu_ln
backup_file /mnt/vendor/res1/boot/logo.png

# === logo ===
if [ -f ./logo.png ]; then
    if is_newer_content "./logo.png" "/mnt/vendor/res1/boot/logo.png"; then
        cp ./logo.png /mnt/vendor/res1/boot/logo.png
        echo "${GREEN}[*] Installed custom splash logo (updated)${NC}"
    else
        echo "${YELLOW}[*] Skipping logo install - already up to date${NC}"
    fi
else
    echo "${YELLOW}[!] logo.png not found, skipping logo install${NC}"
fi

# === scripts we ship ===
install_script $SCRIPTS_DIR/bootmenulogo.sh /mnt/vendor/bin/bootmenulogo.sh
install_script $SCRIPTS_DIR/mass_storage.sh /mnt/vendor/bin/mass_storage.sh
install_script $SCRIPTS_DIR/usb_monitor.sh /mnt/vendor/bin/usb_monitor.sh
install_script $SCRIPTS_DIR/dmenu_wrapper.sh /mnt/vendor/ctrl/dmenu_ln

# === fastreboot command ===
if [ ! -f /usr/local/bin/fastreboot ]; then
    install_script $SCRIPTS_DIR/fastreboot.sh /usr/local/bin/fastreboot
else
    # Only update if content is different
    if is_newer_content "$SCRIPTS_DIR/fastreboot.sh" "/usr/local/bin/fastreboot"; then
        install_script $SCRIPTS_DIR/fastreboot.sh /usr/local/bin/fastreboot
    else
        echo "${YELLOW}[*] fastreboot command already exists and is up to date${NC}"
    fi
fi
# === boot_custom.sh ===
install_script $SCRIPTS_DIR/boot_custom.sh /mnt/vendor/bin/boot_custom.sh

# === loadapp.sh handling ===
LOADAPP=/mnt/vendor/bin/loadapp.sh

if [ -f "$LOADAPP" ]; then
    if grep -q "boot_custom.sh" "$LOADAPP"; then
        echo "${YELLOW}[*] loadapp.sh already patched for custom boot${NC}"
    else
        echo "${GREEN}[*] Patching loadapp.sh to run boot_custom.sh${NC}"
        sed -i '1i sh /mnt/vendor/bin/boot_custom.sh' "$LOADAPP"
    fi
else
    echo "${YELLOW}[*] loadapp.sh not found, creating new one${NC}"
    cat > "$LOADAPP" <<'EOF'
#!/bin/sh
# Auto-generated by custom boot installer
sh /mnt/vendor/bin/boot_custom.sh
EOF
    chmod +x "$LOADAPP"
    echo "${GREEN}[*] Created new loadapp.sh with boot_custom.sh hook${NC}"
fi

# === Run additional installers ===
echo "${GREEN}[*] Running additional component installers...${NC}"

# Git autofetch installer
if [ -f "$SCRIPTS_DIR/git_autofetch_install.sh" ]; then
    echo "${GREEN}[*] Running git_autofetch installer...${NC}"
    sh "$SCRIPTS_DIR/git_autofetch_install.sh"
else
    echo "${YELLOW}[*] git_autofetch_install.sh not found, skipping${NC}"
fi

echo "${GREEN}[*] Custom boot installation complete. Reboot to test.${NC}"
